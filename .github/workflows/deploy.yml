name: Deploy

on:
  workflow_dispatch:
    inputs:
      WORKERS_ENVIRONMENT:
        type: choice
        description: 'Cloudflare Workers Environment to deploy to'
        required: false
        options:
          - 'development'
          - 'production'
          - 'all'
        default: 'development'

  push:
    branches: [develop]

concurrency:
  group: deploy-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  ACTIONS_RUNNER_DEBUG: true
  NODE_OPTIONS: '--no-warnings'
  WORKERS_ENVIRONMENT: ${{ github.event.inputs.WORKERS_ENVIRONMENT }}

jobs:
  checks:
    uses: './.github/workflows/checks.yml'

  deploy-workers:
    if: ${{ !contains(github.event.head_commit.message, '[skip-deploy]') }}
    needs: [checks]
    timeout-minutes: 3
    runs-on: ['ubuntu-latest']
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      # Supabase database url
      DEVELOPMENT_DATABASE: ${{ secrets.DATABASE_URL }}
      PRODUCTION_DATABASE: null
    steps:
      - name: '🔑 Checkout'
        uses: actions/checkout@v4.1.1

      - name: '🐰 Setup Bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 'latest'

      - name: 'Install Dependencies'
        run: bun install

      - name: 'Get Commit SHA'
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      # https://developers.cloudflare.com/workers/wrangler/commands/#deploy
      - name: 'Deploy Cloudflare Workers 🔶'
        uses: './.github/actions/deploy'
        with:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          development: 'true'
          production: 'false'
          stage: 'false'
          test: 'false'
